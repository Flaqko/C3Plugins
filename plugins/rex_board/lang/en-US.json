{
	"languageTag": "en-US",
	"fileDescription": "Strings for Board.",
	"text": {
		"plugins": {
			"rex_slgboard": {
				"name": "Board",
				"description": "Store the logical position of chess",
				"help-url": "https://rexrainbow.github.io/C2RexDoc/c2rexpluginsACE/plugin_rex_board.html",
				"properties": {
					"width": {
						"name": "Width",
						"desc": "Initial number of elements on the X axis."
						},
					"height": {
						"name": "Height",
						"desc": "Initial number of elements on the Y axis."
						},
					"wrap": {
						"name": "Wrap",
						"desc": "Wrap the logical position."
						},
					"infinity": {
						"name": "Infinity",
						"desc": "Infinity board."
						}
				},
				"aceCategories": {
					"layout": "Layout",					
					"board": "Board",
					"create": "Create",					
					"add": "Add",
					"destroy": "Destroy",
					"remove": "Remove",
					"move": "Move",
					"max-min": "Max-min",
					"kick": "Kick",			
					"chess-uid": "Chess uid",
					"physical": "Physical",
					"logic": "Logic",	
					"neighbors": "Neighbors",
					"for-each-cell": "For each cell",
					"for-each-lz": "For each LZ",
					"empty": "Empty",
					"pick-chess": "Pick chess",										
					"pick-chess-by-lxyz": "Pick chess by lxyz",
					"pick-chess-above-tiles": "Pick chess above tiles"
				},
				"conditions": {
					"for-each-cell": {
						"list-name": "For each cell",
						"display-text": "For each cell, [b]{0}[/b]",
						"description": "Repeat the event for each cell in the board.",
						"params": {
							"direction4": { "name":"Direction", "desc":"Scan direction.", "items":{"top to bottom":"Top to bottom","bottom to top":"Bottom to top","left to right":"Left to right","right to left":"Right to left"}}
						}
						},
					"is-occupied": {
						"list-name": "Is occupied",
						"display-text": "Cell [[b]{0}[/b],[b]{1}[/b],[b]{2}[/b]] is occupied",
						"description": "Testing if cell is occupied.",
						"params": {
							"logic_x0": { "name":"Logic X", "desc":"The X index (0-based)."},
							"logic_y1": { "name":"Logic Y", "desc":"The Y index (0-based)."},
							"logic_z2": { "name":"Logic Z", "desc":"The Z index (0-based)."}
						}
						},
					"is-empty": {
						"list-name": "Is empty",
						"display-text": "Cell [[b]{0}[/b],[b]{1}[/b],[b]{2}[/b]] is empty",
						"description": "Testing if cell is empty.",
						"params": {
							"logic_x0": { "name":"Logic X", "desc":"The X index (0-based)."},
							"logic_y1": { "name":"Logic Y", "desc":"The Y index (0-based)."},
							"logic_z2": { "name":"Logic Z", "desc":"The Z index (0-based)."}
						}
						},
					"on-collided": {
						"list-name": "On collision",
						"display-text": "On [b]{0}[/b] collided with [b]{1}[/b]",
						"description": "Triggered when the object collides with another object.",
						"params": {
							"chess0": { "name":"Chess", "desc":"Chess object A."},
							"chess1": { "name":"Chess", "desc":"Chess object B."}
						}
						},
					"is-overlapping": {
						"list-name": "Is overlapping",
						"display-text": "Is [b]{0}[/b] overlapping with [b]{1}[/b]",
						"description": "Test if the object is overlapping another object.",
						"params": {
							"chess0": { "name":"Chess", "desc":"Chess object A."},
							"chess1": { "name":"Chess", "desc":"Chess object B."}
						}
						},
					"is-point-in-board": {
						"list-name": "Point is in board",
						"display-text": "Point ([b]{0}[/b],[b]{1}[/b]) is in board",
						"description": "Testing if point is in board.",
						"params": {
							"x0": { "name":"X", "desc":"The Physical X."},
							"y1": { "name":"Y", "desc":"The Physical Y."}
						}
						},
					"are-neighbors": {
						"list-name": "Are neighbors (UID)",
						"display-text": "Are [b]{0}[/b] and [b]{1}[/b] neighbors",
						"description": "Testing if two chess are neighbors.",
						"params": {
							"uid_of_chess0": { "name":"UID of chess", "desc":"UID of chess A."},
							"uid_of_chess1": { "name":"UID of chess", "desc":"UID of chess B."}
						}
						},
					"pick-all-chess": {
						"list-name": "Pick all chess",
						"display-text": "Pick all chess on the board",
						"description": "Pick all chess on the board."
						},
					"on-chess-kicked": {
						"list-name": "On chess kicked",
						"display-text": "On [b]{0}[/b] kicked",
						"description": "Triggered when chess kicked by 'action:Add chess' or 'action:Move chess'.",
						"params": {
							"chess0": { "name":"Chess", "desc":"Kicked chess object."}
						}
						},
					"pick-chess-at-lxy": {
						"list-name": "Pick chess at LX,LY",
						"display-text": "Pick [b]{0}[/b] at [[b]{1}[/b],[b]{2}[/b]]",
						"description": "Pick chess at Logic X,Y.",
						"params": {
							"chess0": { "name":"Chess", "desc":"Chess object."},
							"logic_x1": { "name":"Logic X", "desc":"The X index (0-based) of the tile."},
							"logic_y2": { "name":"Logic Y", "desc":"The Y index (0-based) of the tile."}
						}
						},
					"pick-chess-above-tile": {
						"list-name": "Pick chess above tile",
						"display-text": "Pick [b]{0}[/b] above [b]{1}[/b]",
						"description": "Pick chess above tile.",
						"params": {
							"chess0": { "name":"Chess", "desc":"Chess object."},
							"tile1": { "name":"Tile", "desc":"Tile object."}
						}
						},
					"pick-chess-above-tile-uid": {
						"list-name": "Pick chess above tile UID",
						"display-text": "Pick [b]{0}[/b] above tile UID: [b]{1}[/b]",
						"description": "Pick chess above tile UID.",
						"params": {
							"chess0": { "name":"Chess", "desc":"Chess object."},
							"tile_uid1": { "name":"Tile UID", "desc":"Tile UID. Can be tile UID/symbol or a tile UID list in JSON string."}
						}
						},
					"is-chess-on-board": {
						"list-name": "On the board",
						"display-text": "Is [b]{0}[/b] on the board",
						"description": "Return true if the chess is on the board.",
						"params": {
							"chess0": { "name":"Chess", "desc":"Chess object."}
						}
						},
					"pick-chess-at-lxyz": {
						"list-name": "Pick chess at LX,LY,LZ",
						"display-text": "Pick [b]{0}[/b] at [[b]{1}[/b],[b]{2}[/b],[b]{3}[/b]]",
						"description": "Pick chess at Logic X,Y,Z.",
						"params": {
							"chess0": { "name":"Chess", "desc":"Chess object."},
							"logic_x1": { "name":"Logic X", "desc":"The X index (0-based) of the tile."},
							"logic_y2": { "name":"Logic Y", "desc":"The Y index (0-based) of the tile."},
							"logic_z3": { "name":"Logic Z", "desc":"The Z index (0-based) of the tile."}
						}
						},
					"pick-neighbor-chess": {
						"list-name": "Pick neighbor chess",
						"display-text": "Pick neighbor chess {2} by origin to {0} , direction to [b]{1}[/b]",
						"description": "Pick neighbor chess.",
						"params": {
							"origin0": { "name":"Origin", "desc":"Origin chess."},
							"direction1": { "name":"Direction", "desc":"Direction of neighbor. (-1) for all directions"},
							"neighbor2": { "name":"Neighbor", "desc":"Neighbor chess object for pickking"}
						}
						},
					"pick-empty-cell": {
						"list-name": "Pick an empty cell",
						"display-text": "Pick an empty cell with logic Z to [b]{0}[/b]",
						"description": "Pick an empty cell randomly, return false if all cells are occupied.",
						"params": {
							"logic_z0": { "name":"Logic Z", "desc":"The Z index (0-based) of the chess to set. 0 is tile."}
						}
						},
					"has-empty-cell": {
						"list-name": "Has any empty cell",
						"display-text": "Has any empty cell with logic Z to [b]{0}[/b]",
						"description": "Return true if there has any empty cell.",
						"params": {
							"logic_z0": { "name":"Logic Z", "desc":"The Z index (0-based) of the chess to set. 0 is tile."}
						}
						},
					"are-wrapped-neighbors": {
						"list-name": "Are wrapped neighbors (UID)",
						"display-text": "Are [b]{0}[/b] and [b]{1}[/b] wrapped neighbors",
						"description": "Testing if two chess are wrapped neighbors.",
						"params": {
							"uid_of_chess0": { "name":"UID of chess", "desc":"UID of chess A."},
							"uid_of_chess1": { "name":"UID of chess", "desc":"UID of chess B."}
						}
						},
					"pick-chess": {
						"list-name": "Pick chess",
						"display-text": "Pick chess [b]{0}[/b]",
						"description": "Pick chess on board.",
						"params": {
							"chess0": { "name":"Chess", "desc":"Chess object."}
						}
						},
					"pick-chess-at-lx": {
						"list-name": "Pick chess at LX",
						"display-text": "Pick [b]{0}[/b] at LX to [b]{1}[/b]",
						"description": "Pick chess at Logic X.",
						"params": {
							"chess0": { "name":"Chess", "desc":"Chess object."},
							"logic_x1": { "name":"Logic X", "desc":"The X index (0-based) of the tile."}
						}
						},
					"pick-chess-at-ly": {
						"list-name": "Pick chess at LY",
						"display-text": "Pick [b]{0}[/b] at LY to [b]{1}[/b]",
						"description": "Pick chess at Logic Y.",
						"params": {
							"chess0": { "name":"Chess", "desc":"Chess object."},
							"logic_y1": { "name":"Logic Y", "desc":"The Y index (0-based) of the tile."}
						}
						},
					"pick-chess-at-lz": {
						"list-name": "Pick chess at LZ",
						"display-text": "Pick [b]{0}[/b] at LZ to [b]{1}[/b]",
						"description": "Pick chess at Logic Z.",
						"params": {
							"chess0": { "name":"Chess", "desc":"Chess object."},
							"logic_z1": { "name":"Logic Z", "desc":"The Z index (0-based) of the tile."}
						}
						},
					"pick-empty-cell-on-tiles": {
						"list-name": "Pick an empty cell on tiles",
						"display-text": "Pick an empty cell on [b]{0}[/b] with logic Z to [b]{1}[/b]",
						"description": "Pick an empty cell randomly on tiles, return false if all cells are occupied.",
						"params": {
							"tile0": { "name":"Tile", "desc":"Tile object."},
							"logic_z1": { "name":"Logic Z", "desc":"The Z index (0-based) of the chess. 0 is tile."}
						}
						},
					"has-empty-cell-on-tiles": {
						"list-name": "Has any empty cell on tiles",
						"display-text": "Has any empty cell on [b]{0}[/b] with logic Z to [b]{1}[/b]",
						"description": "Return true if there has any empty cell on tiles.",
						"params": {
							"tile0": { "name":"Tile", "desc":"Tile object."},
							"logic_z1": { "name":"Logic Z", "desc":"The Z index (0-based) of the chess. 0 is tile."}
						}
						},
					"pick-chess-inside-square": {
						"list-name": "Pick chess inside a square",
						"display-text": "Pick [b]{0}[/b] inside a square - LX from [b]{1}[/b] to [b]{2}[/b], LY from [b]{3}[/b] to [b]{4}[/b]",
						"description": "Pick chess inside a square.",
						"params": {
							"chess0": { "name":"Chess", "desc":"Chess object."},
							"logic_x_of_left1": { "name":"Logic X of left", "desc":"The X index (0-based) of the left tile."},
							"logic_x_of_right2": { "name":"Logic X of right", "desc":"The X index (0-based) of the right tile."},
							"logic_y_of_top3": { "name":"Logic Y of top", "desc":"The Y index (0-based) of the top tile."},
							"logic_y_of_bottom4": { "name":"Logic Y of bottom", "desc":"The Y index (0-based) of the bottom tile."}
						}
						},
					"for-each-lz": {
						"list-name": "For each LZ at LXY",
						"display-text": "For each LZ at [[b]{0}[/b],[b]{1}[/b]]",
						"description": "Repeat the event for each LZ at LXY.",
						"params": {
							"logic_x0": { "name":"Logic X", "desc":"The X index (0-based) of the tile."},
							"logic_y1": { "name":"Logic Y", "desc":"The Y index (0-based) of the tile."}
						}
						}
				},
				"actions": {
					"reset-board": {
						"list-name": "Reset board",
						"display-text": "Reset board with width to [b]{0}[/b], height to [b]{1}[/b]",
						"description": "Reset board to empty.",
						"params": {
							"x0": { "name":"X", "desc":"Initial number of elements on the X axis. 0 is unchanged."},
							"y1": { "name":"Y", "desc":"Initial number of elements on the Y axis. 0 is unchanged."}
						}
					},
					"add-tile": {
						"list-name": "Add tile",
						"display-text": "Add tile [b]{0}[/b] to [[b]{1}[/b], [b]{2}[/b], 0]",
						"description": "Add tile on the board.",
						"params": {
							"tile0": { "name":"Tile", "desc":"Tile object."},
							"logic_x1": { "name":"Logic X", "desc":"The X index (0-based) of the tile."},
							"logic_y2": { "name":"Logic Y", "desc":"The Y index (0-based) of the tile."}
						}
					},
					"destroy-chess": {
						"list-name": "Destroy chess",
						"display-text": "Destroy [b]{0}[/b]",
						"description": "Destroy chess and remove them from the board.",
						"params": {
							"chess0": { "name":"Chess", "desc":"Chess object."}
						}
					},
					"add-chess": {
						"list-name": "Add chess",
						"display-text": "Add chess [b]{0}[/b] to [[b]{1}[/b], [b]{2}[/b], [b]{3}[/b]]",
						"description": "Add chess on the board.",
						"params": {
							"chess0": { "name":"Chess", "desc":"Chess object."},
							"logic_x1": { "name":"Logic X", "desc":"The X index (0-based) of the chess."},
							"logic_y2": { "name":"Logic Y", "desc":"The Y index (0-based) of the chess."},
							"logic_z3": { "name":"Logic Z", "desc":"The Z index (0-based) of the chess. 0 is tile."}
						}
					},
					"add-chess-uid": {
						"list-name": "Add chess by UID",
						"display-text": "Add chess UID:[b]{0}[/b] to [[b]{1}[/b], [b]{2}[/b], [b]{3}[/b]]",
						"description": "Add chess on the board.",
						"params": {
							"uid0": { "name":"UID", "desc":"The UID of chess, or a symbol of chess."},
							"logic_x1": { "name":"Logic X", "desc":"The X index (0-based) of the chess."},
							"logic_y2": { "name":"Logic Y", "desc":"The Y index (0-based) of the chess."},
							"logic_z3": { "name":"Logic Z", "desc":"The Z index (0-based) of the chess. 0 is tile."}
						}
					},
					"remove-chess": {
						"list-name": "Remove chess",
						"display-text": "Remove chess [b]{0}[/b]",
						"description": "Remove chess from the board.",
						"params": {
							"chess0": { "name":"Chess", "desc":"Chess object."}
						}
					},
					"remove-chess-uid": {
						"list-name": "Remove chess by UID",
						"display-text": "Remove chess UID:[b]{0}[/b]",
						"description": "Remove chess by UID from the board.",
						"params": {
							"uid0": { "name":"UID", "desc":"The UID of chess"}
						}
					},
					"move-chess": {
						"list-name": "Move chess",
						"display-text": "Move chess [b]{0}[/b] to tile [b]{1}[/b]",
						"description": "Move chess on the board.",
						"params": {
							"chess0": { "name":"Chess", "desc":"Chess object."},
							"tile1": { "name":"Tile", "desc":"Tile object."}
						}
					},
					"move-chess-uid": {
						"list-name": "Move chess by UID",
						"display-text": "Move chess UID:[b]{0}[/b] to tile UID:[b]{1}[/b]",
						"description": "Move chess by UID on the board.",
						"params": {
							"chess_uid0": { "name":"Chess UID", "desc":"The UID of chess"},
							"tile_uid1": { "name":"Tile UID", "desc":"The UID of tile"}
						}
					},
					"move-chess-to-lxyz": {
						"list-name": "Move chess to xyz",
						"display-text": "Move chess [b]{0}[/b] to [[b]{1}[/b], [b]{2}[/b], [b]{3}[/b]]",
						"description": "Move chess on the board.",
						"params": {
							"chess0": { "name":"Chess", "desc":"Chess object."},
							"logic_x1": { "name":"Logic X", "desc":"The X index (0-based) of the chess."},
							"logic_y2": { "name":"Logic Y", "desc":"The Y index (0-based) of the chess."},
							"logic_z3": { "name":"Logic Z", "desc":"The Z index (0-based) of the chess. 0 is tile."}
						}
					},
					"move-chess-uid-to-lxyz": {
						"list-name": "Move chess to xyz by UID",
						"display-text": "Move chess UID:[b]{0}[/b] to [[b]{1}[/b], [b]{2}[/b], [b]{3}[/b]]",
						"description": "Move chess to xyz index by UID on the board.",
						"params": {
							"chess_uid0": { "name":"Chess UID", "desc":"The UID of chess"},
							"logic_x1": { "name":"Logic X", "desc":"The X index (0-based) of the chess."},
							"logic_y2": { "name":"Logic Y", "desc":"The Y index (0-based) of the chess."},
							"logic_z3": { "name":"Logic Z", "desc":"The Z index (0-based) of the chess. 0 is tile."}
						}
					},
					"setup-layout": {
						"list-name": "Setup layout",
						"display-text": "Set layout to [b]{0}[/b]",
						"description": "Setup layout to transfer logic index to physical position.",
						"params": {
							"layout0": { "name":"Layout", "desc":"Layout to transfer logic index to physical position"}
						}
					},
					"create-tile": {
						"list-name": "Create tile",
						"display-text": "Create tile [b]{0}[/b] to [[b]{1}[/b], [b]{2}[/b], 0] on layer [b]{3}[/b]",
						"description": "Create tile on the board.",
						"params": {
							"tile0": { "name":"Tile", "desc":"Tile object."},
							"logic_x1": { "name":"Logic X", "desc":"The X index (0-based) of the tile."},
							"logic_y2": { "name":"Logic Y", "desc":"The Y index (0-based) of the tile."},
							"layer3": { "name":"Layer", "desc":"Layer name of number."}
						}
					},
					"pick-chess-at-lxyz": {
						"list-name": "Pick chess at Logic X,Y,Z",
						"display-text": "Pick [b]{0}[/b] at [[b]{1}[/b],[b]{2}[/b],[b]{3}[/b]]",
						"description": "Pick chess at Logic X,Y,Z.",
						"params": {
							"chess0": { "name":"Chess", "desc":"Chess object."},
							"logic_x1": { "name":"Logic X", "desc":"The X index (0-based) of the tile."},
							"logic_y2": { "name":"Logic Y", "desc":"The Y index (0-based) of the tile."},
							"logic_z3": { "name":"Logic Z", "desc":"The Z index (0-based) of the tile."}
						}
					},
					"create-chess": {
						"list-name": "Create chess",
						"display-text": "Create chess [b]{0}[/b] to [[b]{1}[/b], [b]{2}[/b], [b]{3}[/b]] on layer [b]{4}[/b]",
						"description": "Create chess on the board.",
						"params": {
							"chess0": { "name":"Chess", "desc":"Chess object."},
							"logic_x1": { "name":"Logic X", "desc":"The X index (0-based) of the chess."},
							"logic_y2": { "name":"Logic Y", "desc":"The Y index (0-based) of the chess."},
							"logic_z3": { "name":"Logic Z", "desc":"The Z index (0-based) of the chess. 0 is tile."},
							"layer4": { "name":"Layer", "desc":"Layer name of number."}
						}
					},
					"swap-chess": {
						"list-name": "Swap chess by UID",
						"display-text": "Swap chess UID [b]{0}[/b] with chess UID [b]{1}[/b]",
						"description": "Swap two chess by UID.",
						"params": {
							"uid_of_chess0": { "name":"UID of chess", "desc":"UID of chess A."},
							"uid_of_chess1": { "name":"UID of chess", "desc":"UID of chess B."}
						}
					},
					"pick-all-chess": {
						"list-name": "Pick all chess",
						"display-text": "Pick all chess on the board",
						"description": "Pick all chess on the board."
					},
					"pick-chess-at-lxy": {
						"list-name": "Pick chess at Logic X,Y",
						"display-text": "Pick [b]{0}[/b] at [[b]{1}[/b],[b]{2}[/b]]",
						"description": "Pick chess at Logic X,Y.",
						"params": {
							"chess0": { "name":"Chess", "desc":"Chess object."},
							"logic_x1": { "name":"Logic X", "desc":"The X index (0-based) of the tile."},
							"logic_y2": { "name":"Logic Y", "desc":"The Y index (0-based) of the tile."}
						}
					},
					"pick-chess-above-tile": {
						"list-name": "Pick chess above tile",
						"display-text": "Pick [b]{0}[/b] above [b]{1}[/b]",
						"description": "Pick chess above tile.",
						"params": {
							"chess0": { "name":"Chess", "desc":"Chess object."},
							"tile1": { "name":"Tile", "desc":"Tile object."}
						}
					},
					"pick-chess-above-tile-uid": {
						"list-name": "Pick chess above tile UID",
						"display-text": "Pick [b]{0}[/b] above tile UID: [b]{1}[/b]",
						"description": "Pick chess above tile UID.",
						"params": {
							"chess0": { "name":"Chess", "desc":"Chess object."},
							"tile_uid1": { "name":"Tile UID", "desc":"Tile UID. Can be number or a tile UID list in JSON string."}
						}
					},
					"set-board-width": {
						"list-name": "Set board width",
						"display-text": "Set board width to [b]{0}[/b]",
						"description": "Set board width.",
						"params": {
							"x0": { "name":"X", "desc":"Initial number of elements on the X axis. 0 is unchanged."}
						}
					},
					"set-board-height": {
						"list-name": "Set board height",
						"display-text": "Set board height to [b]{0}[/b]",
						"description": "Set board height.",
						"params": {
							"y0": { "name":"Y", "desc":"Initial number of elements on the Y axis. 0 is unchanged."}
						}
					},
					"pick-neighbor-chess": {
						"list-name": "Pick neighbor chess",
						"display-text": "Pick neighbor chess {2} by origin to {0} , direction to [b]{1}[/b]",
						"description": "Pick neighbor chess.",
						"params": {
							"origin0": { "name":"Origin", "desc":"Origin chess."},
							"direction1": { "name":"Direction", "desc":"Direction of neighbor. (-1) for all directions"},
							"neighbor2": { "name":"Neighbor", "desc":"Neighbor chess object for pickking"}
						}
					},
					"create-chess-above-tile": {
						"list-name": "Create chess above tile",
						"display-text": "Create chess [b]{0}[/b] above tile [b]{1}[/b] at LZ to [b]{2}[/b], on layer [b]{3}[/b]",
						"description": "Create chess above tile.",
						"params": {
							"chess0": { "name":"Chess", "desc":"Chess object."},
							"tile1": { "name":"Tile", "desc":"Tile object."},
							"logic_z2": { "name":"Logic Z", "desc":"The Z index (0-based) of the chess. 0 is tile."},
							"layer3": { "name":"Layer", "desc":"Layer name of number."}
						}
					},
					"fill-chess": {
						"list-name": "Fill tiles",
						"display-text": "Fill tiles with [b]{0}[/b], on layer [b]{1}[/b]",
						"description": "Fill tiles (LZ=0).",
						"params": {
							"tile0": { "name":"Tile", "desc":"Tile object."},
							"layer1": { "name":"Layer", "desc":"Layer name of number."}
						}
					},
					"set-wrap-mode": {
						"list-name": "Set wrap mode",
						"display-text": "Set wrap mode to [b]{0}[/b]",
						"description": "Set wrap mode.",
						"params": {
							"wrap2": { "name":"Wrap", "desc":"Wrap mode.", "items":{"no":"No","yes":"Yes"}}
						}
					},
					"fill-chess-at-lz": {
						"list-name": "Fill chess",
						"display-text": "Fill LZ [b]{2}[/b] with [b]{0}[/b], on layer [b]{1}[/b]",
						"description": "Fill chess.",
						"params": {
							"chess0": { "name":"Chess", "desc":"Chess object."},
							"layer1": { "name":"Layer", "desc":"Layer name of number."},
							"logic_z2": { "name":"Logic Z", "desc":"The Z index (0-based) of the chess."}
						}
					},
					"pick-chess": {
						"list-name": "Pick chess",
						"display-text": "Pick chess [b]{0}[/b]",
						"description": "Pick chess on board.",
						"params": {
							"chess0": { "name":"Chess", "desc":"Chess object."}
						}
					},
					"pick-chess-at-lx": {
						"list-name": "Pick chess at LX",
						"display-text": "Pick [b]{0}[/b] at LX to [b]{1}[/b]",
						"description": "Pick chess at Logic X.",
						"params": {
							"chess0": { "name":"Chess", "desc":"Chess object."},
							"logic_x1": { "name":"Logic X", "desc":"The X index (0-based) of the tile."}
						}
					},
					"pick-chess-at-ly": {
						"list-name": "Pick chess at LY",
						"display-text": "Pick [b]{0}[/b] at LY to [b]{1}[/b]",
						"description": "Pick chess at Logic Y.",
						"params": {
							"chess0": { "name":"Chess", "desc":"Chess object."},
							"logic_y1": { "name":"Logic Y", "desc":"The Y index (0-based) of the tile."}
						}
					},
					"pick-chess-at-lz": {
						"list-name": "Pick chess at LZ",
						"display-text": "Pick [b]{0}[/b] at LZ to [b]{1}[/b]",
						"description": "Pick chess at Logic Z.",
						"params": {
							"chess0": { "name":"Chess", "desc":"Chess object."},
							"logic_z1": { "name":"Logic Z", "desc":"The Z index (0-based) of the tile."}
						}
					},
					"create-chess-above-tile-uid": {
						"list-name": "Create chess above tile by UID",
						"display-text": "Create chess [b]{0}[/b] above tile UID:[b]{1}[/b] at LZ to [b]{2}[/b], on layer [b]{3}[/b]",
						"description": "Create chess above tile.",
						"params": {
							"chess0": { "name":"Chess", "desc":"Chess object."},
							"tile_uid1": { "name":"Tile UID", "desc":"Tile UID. Can be number or a tile UID list in JSON string."},
							"logic_z2": { "name":"Logic Z", "desc":"The Z index (0-based) of the chess to set. 0 is tile."},
							"layer3": { "name":"Layer", "desc":"Layer name of number."}
						}
					},
					"move-chess-to-lz": {
						"list-name": "Move chess to z",
						"display-text": "Move chess [b]{0}[/b] 's LZ to [b]{1}[/b]",
						"description": "Move chess's LZ on the board.",
						"params": {
							"chess0": { "name":"Chess", "desc":"Chess object."},
							"logic_z1": { "name":"Logic Z", "desc":"The Z index (0-based) of the chess. 0 is tile."}
						}
					},
					"move-chess-to-lxy": {
						"list-name": "Move chess to xy",
						"display-text": "Move chess [b]{0}[/b] 's LXY to [[b]{1}[/b],[b]{2}[/b]]",
						"description": "Move chess to logic X,Y on the board.",
						"params": {
							"chess0": { "name":"Chess", "desc":"Chess object."},
							"logic_x1": { "name":"Logic X", "desc":"The X index (0-based) of the tile."},
							"logic_y2": { "name":"Logic Y", "desc":"The Y index (0-based) of the tile."}
						}
					},
					"pick-chess-inside-square": {
						"list-name": "Pick chess inside a square",
						"display-text": "Pick [b]{0}[/b] inside a square - LX from [b]{1}[/b] to [b]{2}[/b], LY from [b]{3}[/b] to [b]{4}[/b]",
						"description": "Pick chess inside a square.",
						"params": {
							"chess0": { "name":"Chess", "desc":"Chess object."},
							"logic_x_of_left1": { "name":"Logic X of left", "desc":"The X index (0-based) of the left tile."},
							"logic_x_of_right2": { "name":"Logic X of right", "desc":"The X index (0-based) of the right tile."},
							"logic_y_of_top3": { "name":"Logic Y of top", "desc":"The Y index (0-based) of the top tile."},
							"logic_y_of_bottom4": { "name":"Logic Y of bottom", "desc":"The Y index (0-based) of the bottom tile."}
						}
					}
				},
				"expressions": {
					"uid-to-lx": {
						"description": "Get X index of chess by UID. Return (-1) if the chess is not on the board.",
						"translated-name": "UID2LX",
						"params": {
							"uid0": { "name":"UID", "desc":"The UID of chess."}
						}
						},
					"uid-to-ly": {
						"description": "Get Y index of chess by UID. Return (-1) if the chess is not on the board.",
						"translated-name": "UID2LY",
						"params": {
							"uid0": { "name":"UID", "desc":"The UID of chess."}
						}
						},
					"uid-to-lz": {
						"description": "Get Z index of chess by UID. Return (-1) if the chess is not on the board.",
						"translated-name": "UID2LZ",
						"params": {
							"uid0": { "name":"UID", "desc":"The UID of chess."}
						}
						},
					"lxyz-to-uid": {
						"description": "Get UID by XYZ index. Return (-1) if this position has no chess.",
						"translated-name": "LXYZ2UID",
						"params": {
							"x0": { "name":"X", "desc":"The logic X."},
							"y1": { "name":"Y", "desc":"The logic Y."},
							"z2": { "name":"Z", "desc":"The logic Z."}
						}
						},
					"lz-to-uid": {
						"description": "Get UID by relative UID and Z. Return (-1) if this position has no chess.",
						"translated-name": "LZ2UID",
						"params": {
							"uid0": { "name":"UID", "desc":"The UID of chess."},
							"z1": { "name":"Z", "desc":"The logic Z."}
						}
						},
					"lxy-to-px": {
						"description": "Get physical X co-ordinate by logic X,Y index. Return (-1) if this position does not exist.",
						"translated-name": "LXY2PX",
						"params": {
							"x0": { "name":"X", "desc":"The logic X."},
							"y1": { "name":"Y", "desc":"The logic Y."}
						}
						},
					"lxy-to-py": {
						"description": "Get physical Y co-ordinate by logic X,Y index. Return (-1) if this position does not exist.",
						"translated-name": "LXY2PY",
						"params": {
							"x0": { "name":"X", "desc":"The logic X."},
							"y1": { "name":"Y", "desc":"The logic Y."}
						}
						},
					"uid-to-px": {
						"description": "Get X co-ordinate by UID. Return (-1) if the chess is not on the board.",
						"translated-name": "UID2PX",
						"params": {
							"uid0": { "name":"UID", "desc":"The UID of chess."}
						}
						},
					"uid-to-py": {
						"description": "Get Y co-ordinate by UID. Return (-1) if the chess is not on the board.",
						"translated-name": "UID2PY",
						"params": {
							"uid0": { "name":"UID", "desc":"The UID of chess."}
						}
						},
					"uid-to-la": {
						"description": "Get Logic angle by UID, in degree. (-1) is invalid angle.",
						"translated-name": "UID2LA",
						"params": {
							"origin0": { "name":"Origin", "desc":"The UID of chess at origin."},
							"faceto1": { "name":"FaceTo", "desc":"The UID of chess to face."}
						}
						},
					"lxyz-to-px": {
						"description": "Get physical X co-ordinate by logic X,Y,Z index.",
						"translated-name": "LXYZ2PX",
						"params": {
							"x0": { "name":"X", "desc":"The logic X."},
							"y1": { "name":"Y", "desc":"The logic Y."},
							"z2": { "name":"Z", "desc":"The logic Z."}
						}
						},
					"lxyz-to-py": {
						"description": "Get physical Y co-ordinate by logic X,Y,Z index.",
						"translated-name": "LXYZ2PY",
						"params": {
							"x0": { "name":"X", "desc":"The logic X."},
							"y1": { "name":"Y", "desc":"The logic Y."},
							"z2": { "name":"Z", "desc":"The logic Z."}
						}
						},
					"uid-to-lz-cnt": {
						"description": "Get z count at select chess by UID. Return 0 if the chess is not on the board.",
						"translated-name": "UID2ZCnt",
						"params": {
							"uid0": { "name":"UID", "desc":"The UID of chess."}
						}
						},
					"lxy-to-lz-cnt": {
						"description": "Get z count at logic X,Y index. Return 0 if this position does not exist.",
						"translated-name": "LXY2ZCnt",
						"params": {
							"x0": { "name":"X", "desc":"The logic X."},
							"y1": { "name":"Y", "desc":"The logic Y."}
						}
						},
					"pxy-to-lx": {
						"description": "Get logic X by physical X,Y co-ordinate.",
						"translated-name": "PXY2LX",
						"params": {
							"x0": { "name":"X", "desc":"The physical X."},
							"y1": { "name":"Y", "desc":"The physical Y."}
						}
						},
					"pxy-to-ly": {
						"description": "Get logic Y by physical X,Y co-ordinate.",
						"translated-name": "PXY2LY",
						"params": {
							"x0": { "name":"X", "desc":"The physical X."},
							"y1": { "name":"Y", "desc":"The physical Y."}
						}
						},
					"dir-to-uid": {
						"description": "Get neighbor UID by UID and direction. Add 3rd parameter to indicate z-index. Return (-1) if no chess picked.",
						"translated-name": "DIR2UID",
						"params": {
							"uid0": { "name":"UID", "desc":"The UID of origin chess."},
							"direction1": { "name":"Direction", "desc":"The direction."}
						}
						},
					"board-width": {
						"description": "Get board width.",
						"translated-name": "BoardWidth"
						},
					"board-height": {
						"description": "Get board height.",
						"translated-name": "BoardHeight"
						},
					"pxy-to-nearest-px": {
						"description": "Get nearest X co-ordinate of cell from physical position.",
						"translated-name": "PXY2NearestPX",
						"params": {
							"x0": { "name":"X", "desc":"The physical X."},
							"y1": { "name":"Y", "desc":"The physical Y."}
						}
						},
					"pxy-to-nearest-py": {
						"description": "Get nearest Y co-ordinate of cell from physical position.",
						"translated-name": "PXY2NearestPY",
						"params": {
							"x0": { "name":"X", "desc":"The physical X."},
							"y1": { "name":"Y", "desc":"The physical Y."}
						}
						},
					"logic-distance": {
						"description": "Get logic distance of two chess. Return (-1) if one of chess is not on the board.",
						"translated-name": "LogicDistance",
						"params": {
							"uid0": { "name":"UID", "desc":"The UID of chess A."},
							"uid1": { "name":"UID", "desc":"The UID of chess B."}
						}
						},
					"empty-lx": {
						"description": "Get X co-ordinate of an empty cell under \"Condition:Pick an empty cell\". or \"Condition:Has any empty cell\".",
						"translated-name": "EmptyLX"
						},
					"empty-ly": {
						"description": "Get Y co-ordinate of an empty cell under \"Condition:Pick an empty cell\". or \"Condition:Has any empty cell\".",
						"translated-name": "EmptyLY"
						},
					"direction-count": {
						"description": "Get count of directions.",
						"translated-name": "DirCount"
						},
					"neigboruid-to-dir": {
						"description": "Get logic direction of two neighbor chess from chess A to chessB. Return (-1) if they are not on the board.",
						"translated-name": "NeigborUID2DIR",
						"params": {
							"uid0": { "name":"UID", "desc":"The UID of chess A."},
							"uid1": { "name":"UID", "desc":"The UID of chess B."}
						}
						},
					"all-directions": {
						"description": "Direction code for all directions (-1), used in \"Condition: Pick neighbor chess\".",
						"translated-name": "ALLDIRECTIONS"
						},
					"pxy-to-uid": {
						"description": "Get UID by physical X,Y co-ordinate. Add 3rd parameter to indicate z-index. Return (-1) if no chess picked.",
						"translated-name": "PXY2UID",
						"params": {
							"x0": { "name":"X", "desc":"The physical X."},
							"y1": { "name":"Y", "desc":"The physical Y."}
						}
						},
					"current-lx": {
						"description": "Get the current logic X index in a For Each loop.",
						"translated-name": "CurLX"
						},
					"current-ly": {
						"description": "Get the current logic Y index in a For Each loop.",
						"translated-name": "CurLY"
						},
					"current-lz": {
						"description": "Get the current logic Z index in a For Each loop.",
						"translated-name": "CurLZ"
						},
					"max-lx": {
						"description": "Get maximum of LX of all chess.",
						"translated-name": "MaxLX"
						},
					"max-ly": {
						"description": "Get maximum of LY of all chess.",
						"translated-name": "MaxLY"
						},
					"min-lx": {
						"description": "Get minimum of LX of all chess.",
						"translated-name": "MinLX"
						},
					"min-ly": {
						"description": "Get minimum of LY of all chess.",
						"translated-name": "MinLY"
						}
				}
			}
		}
	}
}
